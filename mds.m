distance_matrix = dlmread('dist_EEG_nMDS.csv');a = mink(distance_matrix,2);distance_matrix = distance_matrix-repmat(min(a(2,:)),26,26);distance_matrix = distance_matrix - diag(diag(distance_matrix));N = 26;narrative = [ 0  2  4  5  7  9 11 13 16 17 18 22 25]+1;stimulus = [ 1  3  6  8 10 12 14 15 19 20 21 23 24]+1;subjects = 1:N;condition = [0 1 0 1 0 0 1 0 1 0 1 0 1 0 1 1 0 0 0 1 1 1 0 1 1 0]';K=2;plotFigure = true;N_init = 100;%% cMDSclose all;N_init = 1;labelmMDS = zeros(N_init,N);corr_matrix = zeros(N,N);% plotFigure = true;for nb_init=1:N_init    disp(nb_init)    %[points,strainC] = cmdscale(distance_matrix,2);    [points,strainC] = cmdscale(disparitiesN,2);    disparitiesC = distance_matrix;    if plotFigure        figure();        scatter(points(narrative,1),points(narrative,2),[],'blue','filled');        hold on;        scatter(points(stimulus,1),points(stimulus,2),[],'red','filled');                for i=1:N            text(points(i,1)+max(points,[],'all')/20,points(i,2),int2str(i-1));        end    end    [~,ord] = sortrows([disparitiesC(:) distance_matrix(:)]);    computedDistancesC = pdist(points);    computedDistancesC = squareform(computedDistancesC);        if plotFigure        figure();        plot(distance_matrix,computedDistancesC,'bo', ...        distance_matrix(ord),disparitiesC(ord),'r.-');        xlabel('Dissimilarities'); ylabel('Distances');        legend({'Distances' 'Disparities'},'Location','NW');    end    corrC = corrcoef(computedDistancesC(:),disparitiesC(:));    corrC = corrC(2,1);        label = kmeans(points,K,'Replicates',20)-1;    %label = spectralcluster(points,K)-1;    NA = subjects(label==1);    SSA = subjects(label==2);    accuracy_cMDS = max(1-1/N*sum(label==condition),1/N*sum(label==condition));    labelcMDS(nb_init,:) = label;    %disp(nb_init)    corr_matrix = corr_matrix + (label==label')/N_init;endfor i=1:N    corr_matrix(i,i) = 0;end[newPoints,stressNew] = cmdscale(sqrt(abs(1-corr_matrix)),2);figure();scatter(newPoints(narrative,1),newPoints(narrative,2),[],'blue','filled');hold on;scatter(newPoints(stimulus,1),newPoints(stimulus,2),[],'red','filled');for i=1:N    text(newPoints(i,1)+max(newPoints,[],'all')/20,newPoints(i,2),int2str(i-1));endfor i=1:N_init    tmpAcc = sum(labelcMDS(1,:)==labelcMDS(i,:))/N;    if tmpAcc<0.5        labelcMDS(i,:) = 1-labelcMDS(i,:);    endendprobaLabel = 1/N_init*sum(labelcMDS,1);label = (probaLabel>0.5)';accuracy_cMDS = max(1-1/N*sum(label==condition),1/N*sum(label==condition));disp(probaLabel)%label = kmeans(points,K)-1;%NA = subjects(label==1);%SSA = subjects(label==2); %accuracy_cMDS = max(1-1/N*sum(label==condition),1/N*sum(label==condition)); %% mMDSclose all;N_init = 101;labelmMDS = zeros(N_init,N);corr_matrix = zeros(N,N);% plotFigure = true;for nb_init=1:N_init    %s=rng(2);    %init = rand(N,2);    [points,stressM,disparitiesM] = mdscale(distance_matrix,2,"Criterion","metricstress","Start","random");    %[points,stressM,disparitiesM] = mdscale(distance_matrix,2,"Criterion","metricstress");        if plotFigure        figure();        scatter(points(narrative,1),points(narrative,2),[],'blue','filled');        hold on;        scatter(points(stimulus,1),points(stimulus,2),[],'red','filled');                for i=1:N            text(points(i,1)+max(points,[],'all')/20,points(i,2),int2str(i-1));        end    end    [~,ord] = sortrows([disparitiesM(:) distance_matrix(:)]);    computedDistancesM = pdist(points);    computedDistancesM = squareform(computedDistancesM);        if plotFigure        figure();        plot(distance_matrix,computedDistancesM,'bo', ...        distance_matrix(ord),disparitiesM(ord),'r.-');        xlabel('Dissimilarities'); ylabel('Distances');        legend({'Distances' 'Disparities'},'Location','NW');    end    corrM = corrcoef(computedDistancesM(:),disparitiesM(:));    corrM = corrM(2,1);        label = kmeans(points,K,'Replicates',20)-1;    %label = spectralcluster(points,K)-1;    NA = subjects(label==1);    SSA = subjects(label==2);    accuracy_mMDS = max(1-1/N*sum(label==condition),1/N*sum(label==condition));    labelmMDS(nb_init,:) = label;    %disp(nb_init)    corr_matrix = corr_matrix + (label==label')/N_init;endfor i=1:N    corr_matrix(i,i) = 0;end[newPoints,stressNew] = mdscale(sqrt(abs(1-corr_matrix)),2);figure();scatter(newPoints(narrative,1),newPoints(narrative,2),[],'blue','filled');hold on;scatter(newPoints(stimulus,1),newPoints(stimulus,2),[],'red','filled');for i=1:N    text(newPoints(i,1)+max(newPoints,[],'all')/20,newPoints(i,2),int2str(i-1));endfor i=1:N_init    tmpAcc = sum(labelmMDS(1,:)==labelmMDS(i,:))/N;    if tmpAcc<0.5        labelmMDS(i,:) = 1-labelmMDS(i,:);    endendprobaLabel = 1/N_init*sum(labelmMDS,1);label = (probaLabel>0.5)';accuracy_mMDS = max(1-1/N*sum(label==condition),1/N*sum(label==condition));disp(probaLabel)    %% nMDSN_init = 1001;labelmMDS = zeros(N_init,N);corr_matrix = zeros(N,N);for nb_init=1:N_init    %s=rng(2);    %init = rand(N,2);    [points,stressM,disparitiesN] = mdscale(distance_matrix,2,"Criterion","metricstress","Start","random");    %[points,stressM,disparitiesN] = mdscale(distance_matrix,2,"Criterion","stress");        if plotFigure        figure();        scatter(points(narrative,1),points(narrative,2),[],'blue','filled');        hold on;        scatter(points(stimulus,1),points(stimulus,2),[],'red','filled');                for i=1:N            text(points(i,1)+max(points,[],'all')/20,points(i,2),int2str(i-1));        end    end    [~,ord] = sortrows([disparitiesN(:) distance_matrix(:)]);    computedDistancesN = pdist(points);    computedDistancesN = squareform(computedDistancesN);        if plotFigure        figure();        plot(distance_matrix,computedDistancesN,'bo', ...        distance_matrix(ord),disparitiesN(ord),'r.-');        xlabel('Dissimilarities'); ylabel('Distances');        legend({'Distances' 'Disparities'},'Location','NW');    end    corrN = corrcoef(computedDistancesN(:),disparitiesN(:));    corrN = corrN(2,1);        label = kmeans(points,K,'Replicates',20)-1;    NA = subjects(label==1);    SSA = subjects(label==2);    accuracy_nMDS = max(1-1/N*sum(label==condition),1/N*sum(label==condition));    labelnMDS(nb_init,:) = label;        corr_matrix = corr_matrix + (label==label')/N_init;endfor i=1:N    corr_matrix(i,i) = 0;end[newPoints,stressNew] = mdscale(sqrt(abs(1-corr_matrix)),2,"Criterion","metricstress");figure();scatter(newPoints(narrative,1),newPoints(narrative,2),[],'blue','filled');hold on;scatter(newPoints(stimulus,1),newPoints(stimulus,2),[],'red','filled');for i=1:N    text(newPoints(i,1)+max(newPoints,[],'all')/20,newPoints(i,2),int2str(i-1));endfor i=1:N_init    tmpAcc = sum(labelnMDS(1,:)==labelnMDS(i,:))/N;    if tmpAcc<0.5        labelnMDS(i,:) = 1-labelnMDS(i,:);    endendprobaLabel = 1/N_init*sum(labelnMDS,1);label = (probaLabel>0.5)';accuracy_nMDS = max(1-1/N*sum(label==condition),1/N*sum(label==condition));disp(probaLabel)%label = kmeans(points,K)-1;%NA = subjects(label==1);%SSA = subjects(label==2);%accuracy_nMDS = max(1-1/N*sum(label==condition),1/N*sum(label==condition)); %% Run Python% system('python MDS_normalized.py');